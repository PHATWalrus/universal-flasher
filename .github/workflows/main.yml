name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (format X.Y.Z)'     
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13-xlarge, macos-latest-xlarge]
        include:
          - os: windows-latest
            artifact-name: windows-exe
            dist-path: dist/
            icon: icon.ico
            os-short: windows
          - os: ubuntu-latest
            artifact-name: linux-bin
            dist-path: dist/
            icon: icon.png
            os-short: linux
          - os: macos-13-xlarge
            artifact-name: macos-intel-bin
            dist-path: dist/
            icon: icon.icns
            os-short: macos-intel
            target-arch: x86_64
          - os: macos-latest-xlarge
            artifact-name: macos-arm-bin
            dist-path: dist/
            icon: icon.icns
            os-short: macos-arm
            target-arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --noconfirm --onefile --console \
          --name "flasher" \
          --icon "${{ matrix.icon }}" \
          --target-arch ${{ matrix.target-arch }} \
          "flash.py"
        
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          mv dist/flasher.exe dist/flasher-${{ matrix.os-short }}.exe
        else
          mv dist/flasher dist/flasher-${{ matrix.os-short }}
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.dist-path }}/flasher-${{ matrix.os-short }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Ensure version format (manual builds)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        if [[ "${{ inputs.version }}" != v* ]]; then
          echo "VERSION=v${{ inputs.version }}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
        fi

    - name: Generate Release Notes
      if: ${{ github.event_name == 'push' }}
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "## What's Changed" >> $GITHUB_ENV
        git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> $GITHUB_ENV
        echo -e "\n**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ github.ref_name }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Supported Architectures
          - Windows (x86_64)
          - Linux (x86_64)
          - macOS Intel (x86_64)
          - macOS Apple Silicon (arm64)

          ${{ env.RELEASE_NOTES }}
        files: |
          artifacts/windows-exe/flasher-windows.exe
          artifacts/linux-bin/flasher-linux
          artifacts/macos-intel-bin/flasher-macos-intel
          artifacts/macos-arm-bin/flasher-macos-arm

    - name: Create Manual Build
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'workflow_dispatch' }}
      with:
        tag_name: manual-${{ env.VERSION }}
        name: Manual Build (${{ env.VERSION }})
        body: |
          Unofficial build triggered manually
          **Version**: ${{ env.VERSION }}
          **Build Date**: $(date -u +'%Y-%m-%dT%H:%M:%SZ')

          ## Supported Architectures
          - Windows (x86_64)
          - Linux (x86_64)
          - macOS Intel (x86_64)
          - macOS Apple Silicon (arm64)
        draft: true
        prerelease: true
        files: |
          artifacts/windows-exe/flasher-windows.exe
          artifacts/linux-bin/flasher-linux
          artifacts/macos-intel-bin/flasher-macos-intel
          artifacts/macos-arm-bin/flasher-macos-arm
