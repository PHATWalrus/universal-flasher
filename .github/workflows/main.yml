name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (format vX.Y.Z)'     
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            artifact-name: windows-exe
            dist-path: dist/
          - os: ubuntu-latest
            artifact-name: linux-bin
            dist-path: dist/

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --noconfirm --onefile --console --name "flasher" --icon "icon.ico" "main.py"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.dist-path }}/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Auto-generated release from CI build
            - Windows: flasher.exe
            - Linux: flasher
          files: |
            artifacts/windows-exe/flasher.exe
            artifacts/linux-bin/flasher

      - name: Create Manual Build
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          tag_name: manual-${{ github.run_id }}
          name: Manual Build (${{ inputs.version }})
          body: |
            Unofficial build triggered manually
            **Version**: ${{ inputs.version }}
          draft: true
          prerelease: true
          files: |
            artifacts/windows-exe/flasher.exe
            artifacts/linux-bin/flasher
